{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PresenceFormComponent = class PresenceFormComponent {\n  constructor(presenceService, route, router) {\n    this.presenceService = presenceService;\n    this.route = route;\n    this.router = router;\n    this.presence = {\n      employeeId: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: '',\n      hoursWorked: 0,\n      overtimeHours: 0\n    };\n    this.isEditMode = false;\n    this.id = null;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.isEditMode = true;\n      this.presenceService.getPresenceById(this.id).subscribe(data => {\n        this.presence = {\n          employeeId: data.employeeId,\n          date: data.date,\n          checkInTime: data.checkInTime,\n          checkOutTime: data.checkOutTime,\n          hoursWorked: data.hoursWorked,\n          overtimeHours: data.overtimeHours\n        };\n      });\n    }\n  }\n  onSubmit() {\n    if (this.isEditMode && this.id) {\n      this.presenceService.updatePresence(this.id, this.presence).subscribe(() => {\n        this.router.navigate(['/admin/attendances']);\n      });\n    } else {\n      this.presenceService.savePresence(this.presence).subscribe(() => {\n        this.router.navigate(['/admin/attendances']);\n      });\n    }\n  }\n};\nPresenceFormComponent = __decorate([Component({\n  selector: 'app-presence-form',\n  templateUrl: './presence-form.component.html',\n  styleUrls: ['./presence-form.component.css']\n})], PresenceFormComponent);","map":{"version":3,"names":["Component","PresenceFormComponent","constructor","presenceService","route","router","presence","employeeId","date","checkInTime","checkOutTime","hoursWorked","overtimeHours","isEditMode","id","ngOnInit","snapshot","paramMap","get","getPresenceById","subscribe","data","onSubmit","updatePresence","navigate","savePresence","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\Presence\\presence-form\\presence-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\nimport { PresenceService } from 'src/app/core/services/presence.service';\nimport { Presence } from 'src/app/models/presencemodel';\n\n@Component({\n  selector: 'app-presence-form',\n  templateUrl: './presence-form.component.html',\n  styleUrls: ['./presence-form.component.css']\n})\nexport class PresenceFormComponent implements OnInit {\n\n  presence: Presence = {\n    employeeId: '',\n    date: '',\n    checkInTime: '',\n    checkOutTime: '',\n    hoursWorked: 0,\n    overtimeHours: 0\n  };\n\n  isEditMode = false;\n  id: string | null = null;\n\n  constructor(\n    private presenceService: PresenceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.isEditMode = true;\n      this.presenceService.getPresenceById(this.id).subscribe((data) => {\n        this.presence = {\n          employeeId: data.employeeId,\n          date: data.date,\n          checkInTime: data.checkInTime,\n          checkOutTime: data.checkOutTime,\n          hoursWorked: data.hoursWorked,\n          overtimeHours: data.overtimeHours\n\n        };\n      });\n    }\n  }\n\n  onSubmit(): void {\n    if (this.isEditMode && this.id) {\n      this.presenceService.updatePresence(this.id, this.presence).subscribe(() => {\n        this.router.navigate(['/admin/attendances']);\n      });\n    } else {\n      this.presenceService.savePresence(this.presence).subscribe(() => {\n        this.router.navigate(['/admin/attendances']);\n      });\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAchCC,YACUC,eAAgC,EAChCC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IAfhB,KAAAC,QAAQ,GAAa;MACnBC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE;KAChB;IAED,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,EAAE,GAAkB,IAAI;EAMrB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACD,EAAE,GAAG,IAAI,CAACV,KAAK,CAACY,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAChD,IAAI,IAAI,CAACJ,EAAE,EAAE;MACX,IAAI,CAACD,UAAU,GAAG,IAAI;MACtB,IAAI,CAACV,eAAe,CAACgB,eAAe,CAAC,IAAI,CAACL,EAAE,CAAC,CAACM,SAAS,CAAEC,IAAI,IAAI;QAC/D,IAAI,CAACf,QAAQ,GAAG;UACdC,UAAU,EAAEc,IAAI,CAACd,UAAU;UAC3BC,IAAI,EAAEa,IAAI,CAACb,IAAI;UACfC,WAAW,EAAEY,IAAI,CAACZ,WAAW;UAC7BC,YAAY,EAAEW,IAAI,CAACX,YAAY;UAC/BC,WAAW,EAAEU,IAAI,CAACV,WAAW;UAC7BC,aAAa,EAAES,IAAI,CAACT;SAErB;MACH,CAAC,CAAC;;EAEN;EAEAU,QAAQA,CAAA;IACN,IAAI,IAAI,CAACT,UAAU,IAAI,IAAI,CAACC,EAAE,EAAE;MAC9B,IAAI,CAACX,eAAe,CAACoB,cAAc,CAAC,IAAI,CAACT,EAAE,EAAE,IAAI,CAACR,QAAQ,CAAC,CAACc,SAAS,CAAC,MAAK;QACzE,IAAI,CAACf,MAAM,CAACmB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;MAC9C,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACrB,eAAe,CAACsB,YAAY,CAAC,IAAI,CAACnB,QAAQ,CAAC,CAACc,SAAS,CAAC,MAAK;QAC9D,IAAI,CAACf,MAAM,CAACmB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;MAC9C,CAAC,CAAC;;EAEN;CAED;AAlDYvB,qBAAqB,GAAAyB,UAAA,EALjC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW5B,qBAAqB,CAkDjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}