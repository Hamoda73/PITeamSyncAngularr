{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequestService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8082/api/requests';\n  }\n  static {\n    this.ɵfac = function RequestService_Factory(t) {\n      return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RequestService,\n      factory: RequestService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["RequestService","constructor","http","baseUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\core\\services\\request.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  private baseUrl = 'http://localhost:8082/api/requests';\n\n  constructor(private http: HttpClient) {}\n\n  /*createRequest(request: Request): Observable<Request> {\n    return this.http.post<Request>(this.baseUrl, request);\n  }\n  private apiUrll = 'http://localhost:8082/api/requests/create';  // Changez l'URL en fonction de votre API\n\n  constructor(private http: HttpClient) {}\n\n  createRequest(request: any): Observable<any> {\n    return this.http.post<any>(this.apiUrll, request);\n  }\n\n  getAllRequests(): Observable<Request[]> {\n    return this.http.get<Request[]>(`${this.baseUrl}/all`);\n  }\n\n  getRequestsByEmployee(employeeId: string): Observable<Request[]> {\n    return this.http.get<Request[]>(`${this.baseUrl}/user/${employeeId}`);\n  }\n\n  updateStatus(id: string, status: string): Observable<Request> {\n    return this.http.put<Request>(`${this.baseUrl}/${id}/status?status=${status}`, {});\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC;EAEf;;;uBAJ5BH,cAAc,EAAAI,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdP,cAAc;MAAAQ,OAAA,EAAdR,cAAc,CAAAS,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}