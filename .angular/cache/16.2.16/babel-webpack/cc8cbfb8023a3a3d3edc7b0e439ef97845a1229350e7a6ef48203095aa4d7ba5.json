{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PresenceListComponent = class PresenceListComponent {\n  // Ajout de Router dans le constructeur pour l'injection de dépendance\n  constructor(payrollService, router) {\n    this.payrollService = payrollService;\n    this.router = router;\n    this.payrolls = [];\n    this.employeeNames = new Map();\n  }\n  ngOnInit() {\n    this.loadPayrolls();\n  }\n  loadPayrolls() {\n    this.payrollService.getAllPayrolls().subscribe(data => {\n      this.payrolls = data;\n      this.payrolls.forEach(payroll => {\n        this.payrollService.getEmployeeName(payroll.employeeId).subscribe(name => {\n          this.employeeNames.set(payroll.employeeId, name);\n        }, error => {\n          console.error('Erreur lors de la récupération du nom de l\\'employé', error);\n        });\n      });\n    }, error => {\n      console.error('Erreur lors de la récupération des fiches de paie', error);\n    });\n  }\n  onEdit(payroll) {\n    // Utilisation de l'instance de router injectée pour la redirection\n    this.router.navigate([`/admin/payrolls/edit`, payroll.id]);\n  }\n  onDelete(payrollId) {\n    this.payrollService.deletePayroll(payrollId).subscribe(() => {\n      console.log('Fiche de paie supprimée avec succès');\n      this.loadPayrolls(); // Rechargement de la liste après suppression\n    }, error => {\n      console.error('Erreur lors de la suppression de la fiche de paie', error);\n    });\n  }\n};\nPresenceListComponent = __decorate([Component({\n  selector: 'app-presence-list',\n  templateUrl: './presence-list.component.html',\n  styleUrls: ['./presence-list.component.css']\n})], PresenceListComponent);","map":{"version":3,"names":["Component","PresenceListComponent","constructor","payrollService","router","payrolls","employeeNames","Map","ngOnInit","loadPayrolls","getAllPayrolls","subscribe","data","forEach","payroll","getEmployeeName","employeeId","name","set","error","console","onEdit","navigate","id","onDelete","payrollId","deletePayroll","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\Presence\\presence-list\\presence-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-presence-list',\n  templateUrl: './presence-list.component.html',\n  styleUrls: ['./presence-list.component.css']\n})\nexport class PresenceListComponent {\n\n  payrolls: Payroll[] = [];\n  employeeNames: Map<string, string> = new Map();\n\n  // Ajout de Router dans le constructeur pour l'injection de dépendance\n  constructor(private payrollService: PayrollService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.loadPayrolls();\n  }\n\n  loadPayrolls(): void {\n    this.payrollService.getAllPayrolls().subscribe(\n      (data) => {\n        this.payrolls = data;\n        this.payrolls.forEach(payroll => {\n          this.payrollService.getEmployeeName(payroll.employeeId).subscribe(\n            (name) => {\n              this.employeeNames.set(payroll.employeeId, name);\n            },\n            (error) => {\n              console.error('Erreur lors de la récupération du nom de l\\'employé', error);\n            }\n          );\n        });\n      },\n      (error) => {\n        console.error('Erreur lors de la récupération des fiches de paie', error);\n      }\n    );\n  }\n  \n  onEdit(payroll: Payroll): void {\n    // Utilisation de l'instance de router injectée pour la redirection\n    this.router.navigate([`/admin/payrolls/edit`, payroll.id]);\n  }\n  \n  onDelete(payrollId: string): void {\n    this.payrollService.deletePayroll(payrollId).subscribe(\n      () => {\n        console.log('Fiche de paie supprimée avec succès');\n        this.loadPayrolls();  // Rechargement de la liste après suppression\n      },\n      (error) => {\n        console.error('Erreur lors de la suppression de la fiche de paie', error);\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhC;EACAC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAJlE,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,aAAa,GAAwB,IAAIC,GAAG,EAAE;EAG+B;EAE7EC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACN,cAAc,CAACO,cAAc,EAAE,CAACC,SAAS,CAC3CC,IAAI,IAAI;MACP,IAAI,CAACP,QAAQ,GAAGO,IAAI;MACpB,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAACC,OAAO,IAAG;QAC9B,IAAI,CAACX,cAAc,CAACY,eAAe,CAACD,OAAO,CAACE,UAAU,CAAC,CAACL,SAAS,CAC9DM,IAAI,IAAI;UACP,IAAI,CAACX,aAAa,CAACY,GAAG,CAACJ,OAAO,CAACE,UAAU,EAAEC,IAAI,CAAC;QAClD,CAAC,EACAE,KAAK,IAAI;UACRC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;QAC7E,CAAC,CACF;MACH,CAAC,CAAC;IACJ,CAAC,EACAA,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;IAC3E,CAAC,CACF;EACH;EAEAE,MAAMA,CAACP,OAAgB;IACrB;IACA,IAAI,CAACV,MAAM,CAACkB,QAAQ,CAAC,CAAC,sBAAsB,EAAER,OAAO,CAACS,EAAE,CAAC,CAAC;EAC5D;EAEAC,QAAQA,CAACC,SAAiB;IACxB,IAAI,CAACtB,cAAc,CAACuB,aAAa,CAACD,SAAS,CAAC,CAACd,SAAS,CACpD,MAAK;MACHS,OAAO,CAACO,GAAG,CAAC,qCAAqC,CAAC;MAClD,IAAI,CAAClB,YAAY,EAAE,CAAC,CAAE;IACxB,CAAC,EACAU,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;IAC3E,CAAC,CACF;EACH;CAED;AAlDYlB,qBAAqB,GAAA2B,UAAA,EALjC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW9B,qBAAqB,CAkDjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}