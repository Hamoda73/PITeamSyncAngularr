{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequestService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8082/api/requests';\n    this.apiUrll = 'http://localhost:8082/api/requests/create'; // Changez l'URL en fonction de votre API\n  }\n\n  createRequest(request) {\n    return this.http.post(this.apiUrll, request);\n  }\n  getAllRequests() {\n    return this.http.get(`${this.baseUrl}/all`);\n  }\n  getRequestsByEmployee(employeeId) {\n    return this.http.get(`${this.baseUrl}/user/${employeeId}`);\n  }\n  getRequestById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateRequest(id, request) {\n    return this.http.put(`${this.baseUrl}/${id}`, request);\n  }\n  static {\n    this.ɵfac = function RequestService_Factory(t) {\n      return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RequestService,\n      factory: RequestService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nthis.router.navigate(['/user/requestform', this.requestId], {\n  queryParams: {\n    employeeId: this.form.value.employeeId\n  }\n});\nupdateStatus(id, string, status, string);\nObservable < Request > {\n  return: this.http.put(`${this.baseUrl}/${id}/status?status=${status}`, {})\n};","map":{"version":3,"names":["Observable","RequestService","constructor","http","baseUrl","apiUrll","createRequest","request","post","getAllRequests","get","getRequestsByEmployee","employeeId","getRequestById","id","updateRequest","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","router","navigate","requestId","queryParams","form","value","updateStatus","string","status","Request","return"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\core\\services\\request.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  private baseUrl = 'http://localhost:8082/api/requests';\n\n  constructor(private http: HttpClient) {}\n\n  private apiUrll = 'http://localhost:8082/api/requests/create';  // Changez l'URL en fonction de votre API\n\n  \n\n  createRequest(request: any): Observable<any> {\n    return this.http.post<any>(this.apiUrll, request);\n  }\n\n  getAllRequests(): Observable<Request[]> {\n    return this.http.get<Request[]>(`${this.baseUrl}/all`);\n  }\n\n  getRequestsByEmployee(employeeId: string): Observable<Request[]> {\n    return this.http.get<Request[]>(`${this.baseUrl}/user/${employeeId}`);\n  }\n \n  getRequestById(id: string): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}/${id}`);\n  }\n\n  updateRequest(id: string, request: any): Observable<any> {\n    return this.http.put<any>(`${this.baseUrl}/${id}`, request);\n  }\n  this.router.navigate(['/user/requestform', this.requestId], {\n    queryParams: { employeeId: this.form.value.employeeId }\n  });\n  \n  \n\n  updateStatus(id: string, status: string): Observable<Request> {\n    return this.http.put<Request>(`${this.baseUrl}/${id}/status?status=${status}`, {});\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC;IAI9C,KAAAC,OAAO,GAAG,2CAA2C,CAAC,CAAE;EAFzB;;EAMvCC,aAAaA,CAACC,OAAY;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,IAAI,CAACH,OAAO,EAAEE,OAAO,CAAC;EACnD;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAY,GAAG,IAAI,CAACN,OAAO,MAAM,CAAC;EACxD;EAEAO,qBAAqBA,CAACC,UAAkB;IACtC,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAY,GAAG,IAAI,CAACN,OAAO,SAASQ,UAAU,EAAE,CAAC;EACvE;EAEAC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACN,OAAO,IAAIU,EAAE,EAAE,CAAC;EACpD;EAEAC,aAAaA,CAACD,EAAU,EAAEP,OAAY;IACpC,OAAO,IAAI,CAACJ,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACZ,OAAO,IAAIU,EAAE,EAAE,EAAEP,OAAO,CAAC;EAC7D;;;uBA5BWN,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdnB,cAAc;MAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;AA+BlB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,IAAI,CAACC,SAAS,CAAC,EAAE;EAC1DC,WAAW,EAAE;IAAEf,UAAU,EAAE,IAAI,CAACgB,IAAI,CAACC,KAAK,CAACjB;EAAU;CACtD,CAAC;AAIFkB,YAAY,CAAChB,EAAE,EAAEiB,MAAM,EAAEC,MAAM,EAAED,MAAM,CAAC;AAAE/B,UAAU,GAACiC,OAAO,GAAE;EAC5DC,MAAM,EAAC,IAAI,CAAC/B,IAAI,CAACa,GAAG,CAAU,GAAG,IAAI,CAACZ,OAAO,IAAIU,EAAE,kBAAkBkB,MAAM,EAAE,EAAE,EAAE;CAClF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}