{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/presence.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PresenceFormComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emp_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", emp_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(emp_r2.name);\n  }\n}\nexport class PresenceFormComponent {\n  constructor(presenceService, router) {\n    this.presenceService = presenceService;\n    this.router = router;\n    this.presence = {\n      employeeId: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: ''\n    };\n    this.message = '';\n  }\n  onSubmit() {\n    // Crée un objet payroll à partir des valeurs du formulaire\n    const payrollData = {\n      employeeId: this.payroll.employeeId,\n      employeeName: this.payroll.employeeName,\n      salary: this.payroll.salary,\n      bonus: this.payroll.bonus,\n      payDate: this.payroll.payDate\n    };\n    this.payrollService.addPayroll(payrollData).subscribe(response => {\n      this.message = 'Fiche de paie ajoutée avec succès !';\n      setTimeout(() => {\n        this.router.navigate(['/payrolls']); // Redirige vers la liste des fiches de paie après ajout\n      }, 2000);\n    }, error => {\n      console.error('Erreur lors de l’ajout de la fiche de paie', error);\n    });\n  }\n  static {\n    this.ɵfac = function PresenceFormComponent_Factory(t) {\n      return new (t || PresenceFormComponent)(i0.ɵɵdirectiveInject(i1.PresenceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PresenceFormComponent,\n      selectors: [[\"app-presence-form\"]],\n      decls: 26,\n      vars: 7,\n      consts: [[1, \"card\", \"p-4\"], [1, \"mb-3\"], [3, \"ngSubmit\"], [\"presenceForm\", \"ngForm\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"employeeId\"], [\"id\", \"employeeId\", \"name\", \"employeeId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"date\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"checkInTime\"], [\"type\", \"time\", \"id\", \"checkInTime\", \"name\", \"checkInTime\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"checkOutTime\"], [\"type\", \"time\", \"id\", \"checkOutTime\", \"name\", \"checkOutTime\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ms-2\", 3, \"click\"], [3, \"value\"]],\n      template: function PresenceFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2, 3);\n          i0.ɵɵlistener(\"ngSubmit\", function PresenceFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Employ\\u00E9\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"select\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_select_ngModelChange_8_listener($event) {\n            return ctx.presence.employeeId = $event;\n          });\n          i0.ɵɵtemplate(9, PresenceFormComponent_option_9_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.presence.date = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 10);\n          i0.ɵɵtext(16, \"Heure d'entr\\u00E9e\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_17_listener($event) {\n            return ctx.presence.checkInTime = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n          i0.ɵɵtext(20, \"Heure de sortie\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_21_listener($event) {\n            return ctx.presence.checkOutTime = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"button\", 14);\n          i0.ɵɵtext(23);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function PresenceFormComponent_Template_button_click_24_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵtext(25, \"Annuler\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Modifier\" : \"Ajouter\", \" une pr\\u00E9sence\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.employeeId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.date);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.checkInTime);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.checkOutTime);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Mettre \\u00E0 jour\" : \"Ajouter\", \" \");\n        }\n      },\n      dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","emp_r2","id","ɵɵadvance","ɵɵtextInterpolate","name","PresenceFormComponent","constructor","presenceService","router","presence","employeeId","date","checkInTime","checkOutTime","message","onSubmit","payrollData","payroll","employeeName","salary","bonus","payDate","payrollService","addPayroll","subscribe","response","setTimeout","navigate","error","console","ɵɵdirectiveInject","i1","PresenceService","i2","Router","selectors","decls","vars","consts","template","PresenceFormComponent_Template","rf","ctx","ɵɵlistener","PresenceFormComponent_Template_form_ngSubmit_3_listener","PresenceFormComponent_Template_select_ngModelChange_8_listener","$event","ɵɵtemplate","PresenceFormComponent_option_9_Template","PresenceFormComponent_Template_input_ngModelChange_13_listener","PresenceFormComponent_Template_input_ngModelChange_17_listener","PresenceFormComponent_Template_input_ngModelChange_21_listener","PresenceFormComponent_Template_button_click_24_listener","goBack","ɵɵtextInterpolate1","isEditMode","employees"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\Presence\\presence-form\\presence-form.component.ts","C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\Presence\\presence-form\\presence-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\nimport { PresenceService } from 'src/app/core/services/presence.service';\nimport { Presence } from 'src/app/models/presencemodel';\n\n@Component({\n  selector: 'app-presence-form',\n  templateUrl: './presence-form.component.html',\n  styleUrls: ['./presence-form.component.css']\n})\nexport class PresenceFormComponent {\n\n  presence = {\n    employeeId: '',\n    date: '',\n    checkInTime: '',\n    checkOutTime: ''\n  };\n\n  message: string = '';\n\n  constructor(private presenceService: PresenceService, private router: Router) { }\n\n  onSubmit(): void {\n    // Crée un objet payroll à partir des valeurs du formulaire\n    const payrollData: Presence = {\n      employeeId: this.payroll.employeeId,\n      employeeName: this.payroll.employeeName,\n      salary: this.payroll.salary,\n      bonus: this.payroll.bonus,\n      payDate: this.payroll.payDate\n    };\n\n    this.payrollService.addPayroll(payrollData).subscribe(\n      response => {\n        this.message = 'Fiche de paie ajoutée avec succès !';\n        setTimeout(() => {\n          this.router.navigate(['/payrolls']); // Redirige vers la liste des fiches de paie après ajout\n        }, 2000);\n      },\n      error => {\n        console.error('Erreur lors de l’ajout de la fiche de paie', error);\n      }\n    );\n  }\n\n}\n","<div class=\"card p-4\">\n    <h3 class=\"mb-3\">{{ isEditMode ? 'Modifier' : 'Ajouter' }} une présence</h3>\n  \n    <form (ngSubmit)=\"onSubmit()\" #presenceForm=\"ngForm\">\n      <div class=\"form-group mb-3\">\n        <label for=\"employeeId\">Employé</label>\n        <select id=\"employeeId\" [(ngModel)]=\"presence.employeeId\" name=\"employeeId\" class=\"form-control\" required>\n          <option *ngFor=\"let emp of employees\" [value]=\"emp.id\">{{ emp.name }}</option>\n        </select>\n      </div>\n  \n      <div class=\"form-group mb-3\">\n        <label for=\"date\">Date</label>\n        <input type=\"date\" id=\"date\" class=\"form-control\" [(ngModel)]=\"presence.date\" name=\"date\" required />\n      </div>\n  \n      <div class=\"form-group mb-3\">\n        <label for=\"checkInTime\">Heure d'entrée</label>\n        <input type=\"time\" id=\"checkInTime\" class=\"form-control\" [(ngModel)]=\"presence.checkInTime\" name=\"checkInTime\" />\n      </div>\n  \n      <div class=\"form-group mb-3\">\n        <label for=\"checkOutTime\">Heure de sortie</label>\n        <input type=\"time\" id=\"checkOutTime\" class=\"form-control\" [(ngModel)]=\"presence.checkOutTime\" name=\"checkOutTime\" />\n      </div>\n  \n      <button type=\"submit\" class=\"btn btn-primary\">\n        {{ isEditMode ? 'Mettre à jour' : 'Ajouter' }}\n      </button>\n      <button type=\"button\" class=\"btn btn-secondary ms-2\" (click)=\"goBack()\">Annuler</button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}