{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PresenceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/api/attendances';\n  }\n  getAllAttendances() {\n    return this.http.get(`${this.apiUrl}/all`).pipe(catchError(error => {\n      console.error('Error fetching attendances', error);\n      return throwError(() => new Error('Could not load attendances'));\n    }));\n  }\n  getPresenceById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  savePresence(presence) {\n    return this.http.post(`${this.apiUrl}/saveAttendance`, presence);\n  }\n  updatePresence(id, presence) {\n    return this.http.put(`${this.apiUrl}/${id}`, presence);\n  }\n  deletePresence(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PresenceService_Factory(t) {\n      return new (t || PresenceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PresenceService,\n      factory: PresenceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PresenceService","constructor","http","apiUrl","getAllAttendances","get","pipe","catchError","error","console","throwError","Error","getPresenceById","id","savePresence","presence","post","updatePresence","put","deletePresence","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\core\\services\\presence.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { Presence } from 'src/app/models/presencemodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n\n  private apiUrl = 'http://localhost:8082/api/attendances';\n\n  constructor(private http: HttpClient) {}\n\n  \n  getAllAttendances(): Observable<Presence[]> {\n    return this.http.get<Presence[]>(`${this.apiUrl}/all`).pipe(\n      catchError(error => {\n        console.error('Error fetching attendances', error);\n        return throwError(() => new Error('Could not load attendances'));\n      })\n    );\n  }\n\n  getPresenceById(id: string): Observable<Presence> {\n    return this.http.get<Presence>(`${this.apiUrl}/${id}`);\n  }\n\n  savePresence(presence: Presence): Observable<Presence> {\n    return this.http.post<Presence>(`${this.apiUrl}/saveAttendance`, presence);\n  }\n\n  updatePresence(id: string, presence: Presence): Observable<Presence> {\n    return this.http.put<Presence>(`${this.apiUrl}/${id}`, presence);\n  }\n\n  deletePresence(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n  \n}\n\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uCAAuC;EAEjB;EAGvCC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,MAAM,MAAM,CAAC,CAACG,IAAI,CACzDC,UAAU,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAOE,UAAU,CAAC,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAClE,CAAC,CAAC,CACH;EACH;EAEAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,IAAIU,EAAE,EAAE,CAAC;EACxD;EAEAC,YAAYA,CAACC,QAAkB;IAC7B,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAW,GAAG,IAAI,CAACb,MAAM,iBAAiB,EAAEY,QAAQ,CAAC;EAC5E;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAW,GAAG,IAAI,CAACf,MAAM,IAAIU,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACX,IAAI,CAACkB,MAAM,CAAO,GAAG,IAAI,CAACjB,MAAM,IAAIU,EAAE,EAAE,CAAC;EACvD;;;uBA9BWb,eAAe,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfxB,eAAe;MAAAyB,OAAA,EAAfzB,eAAe,CAAA0B,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}