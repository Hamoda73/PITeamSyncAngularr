{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PresenceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/api/attendances';\n  }\n  getAllPresences() {\n    return this.http.get(this.apiUrl + '/all').pipe(switchMap(presences => {\n      // Pour chaque présence, récupérez les détails de l'employé\n      const observables = presences.map(p => {\n        return this.http.get(`${this.employeeApiUrl}/${p.employeeId}`).pipe(map(employee => ({\n          ...p,\n          employeeName: employee.name // Ajoutez le nom de l'employé\n        })));\n      });\n\n      return forkJoin(observables);\n    }));\n  }\n  getPresenceById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  savePresence(presence) {\n    return this.http.post(`${this.apiUrl}/saveAttendance`, presence);\n  }\n  updatePresence(id, presence) {\n    return this.http.put(`${this.apiUrl}/${id}`, presence);\n  }\n  deletePresence(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PresenceService_Factory(t) {\n      return new (t || PresenceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PresenceService,\n      factory: PresenceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PresenceService","constructor","http","apiUrl","getAllPresences","get","pipe","switchMap","presences","observables","map","p","employeeApiUrl","employeeId","employee","employeeName","name","forkJoin","getPresenceById","id","savePresence","presence","post","updatePresence","put","deletePresence","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\core\\services\\presence.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Presence } from 'src/app/models/presencemodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n\n  private apiUrl = 'http://localhost:8082/api/attendances';\n\n  constructor(private http: HttpClient) {}\n\n  getAllPresences(): Observable<Presence[]> {\n    return this.http.get<Presence[]>(this.apiUrl + '/all').pipe(\n      switchMap(presences => {\n        // Pour chaque présence, récupérez les détails de l'employé\n        const observables = presences.map(p => {\n          return this.http.get<Employee>(`${this.employeeApiUrl}/${p.employeeId}`).pipe(\n            map(employee => ({\n              ...p,\n              employeeName: employee.name // Ajoutez le nom de l'employé\n            }))\n          );\n        });\n        return forkJoin(observables);\n      })\n    );\n  }\n\n  getPresenceById(id: string): Observable<Presence> {\n    return this.http.get<Presence>(`${this.apiUrl}/${id}`);\n  }\n\n  savePresence(presence: Presence): Observable<Presence> {\n    return this.http.post<Presence>(`${this.apiUrl}/saveAttendance`, presence);\n  }\n\n  updatePresence(id: string, presence: Presence): Observable<Presence> {\n    return this.http.put<Presence>(`${this.apiUrl}/${id}`, presence);\n  }\n\n  deletePresence(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n  \n}\n\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uCAAuC;EAEjB;EAEvCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,GAAG,MAAM,CAAC,CAACG,IAAI,CACzDC,SAAS,CAACC,SAAS,IAAG;MACpB;MACA,MAAMC,WAAW,GAAGD,SAAS,CAACE,GAAG,CAACC,CAAC,IAAG;QACpC,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACO,cAAc,IAAID,CAAC,CAACE,UAAU,EAAE,CAAC,CAACP,IAAI,CAC3EI,GAAG,CAACI,QAAQ,KAAK;UACf,GAAGH,CAAC;UACJI,YAAY,EAAED,QAAQ,CAACE,IAAI,CAAC;SAC7B,CAAC,CAAC,CACJ;MACH,CAAC,CAAC;;MACF,OAAOC,QAAQ,CAACR,WAAW,CAAC;IAC9B,CAAC,CAAC,CACH;EACH;EAEAS,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,IAAIgB,EAAE,EAAE,CAAC;EACxD;EAEAC,YAAYA,CAACC,QAAkB;IAC7B,OAAO,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAW,GAAG,IAAI,CAACnB,MAAM,iBAAiB,EAAEkB,QAAQ,CAAC;EAC5E;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACnB,IAAI,CAACsB,GAAG,CAAW,GAAG,IAAI,CAACrB,MAAM,IAAIgB,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACjB,IAAI,CAACwB,MAAM,CAAO,GAAG,IAAI,CAACvB,MAAM,IAAIgB,EAAE,EAAE,CAAC;EACvD;;;uBArCWnB,eAAe,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAf9B,eAAe;MAAA+B,OAAA,EAAf/B,eAAe,CAAAgC,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}