{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/presence.service\";\nimport * as i2 from \"src/app/core/services/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../../shared/components/admin/admin-footer/admin-footer.component\";\nexport class PresenceFormComponent {\n  constructor(presenceService, employeeService, route, router) {\n    this.presenceService = presenceService;\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n    this.presence = {\n      employeeId: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: '',\n      hoursWorked: 0,\n      overtimeHours: 0\n    };\n    this.isEditMode = false;\n    this.id = null;\n    this.employees = [];\n  }\n  ngOnInit() {\n    this.employeeService.getAllEmployees().subscribe(data => {\n      this.employees = data;\n    });\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.isEditMode = true;\n      this.presenceService.getPresenceById(this.id).subscribe(data => {\n        this.presence = {\n          employeeId: data.employeeId,\n          date: data.date,\n          checkInTime: data.checkInTime,\n          checkOutTime: data.checkOutTime,\n          hoursWorked: data.hoursWorked,\n          overtimeHours: data.overtimeHours\n        };\n      });\n    }\n  }\n  onSubmit() {\n    if (this.isEditMode && this.id) {\n      this.presenceService.updatePresence(this.id, this.presence).subscribe(() => {\n        this.router.navigate(['/admin/presence']);\n      });\n    } else {\n      this.presenceService.savePresence(this.presence).subscribe(() => {\n        this.router.navigate(['/admin/attendances']);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function PresenceFormComponent_Factory(t) {\n      return new (t || PresenceFormComponent)(i0.ɵɵdirectiveInject(i1.PresenceService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PresenceFormComponent,\n      selectors: [[\"app-presence-form\"]],\n      decls: 38,\n      vars: 5,\n      consts: [[1, \"main-wrapper\"], [1, \"container-fluid\"], [1, \"inner-contents\"], [1, \"page-header\", \"d-flex\", \"align-items-center\", \"justify-content-between\", \"mr-bottom-30\"], [1, \"left-part\"], [1, \"text-gray\", \"mb-0\"], [1, \"right-part\"], [\"action\", \"https://wpthemebooster.com/demo/themeforest/html/kleon/search.php\", 1, \"search-form\", \"w-auto\"], [\"type\", \"text\", \"name\", \"search\", \"placeholder\", \"Search\", 1, \"bg-white\", \"form-control\"], [\"type\", \"submit\", 1, \"btn\"], [\"src\", \"assets/img/svg/search.svg\", \"alt\", \"\"], [1, \"card\", \"border-0\", \"p-5\"], [1, \"card-header\", \"bg-transparent\", \"border-0\", \"p-0\", \"d-flex\", \"align-items-center\", \"justify-content-between\", \"gap-3\"], [1, \"mb-0\"], [1, \"card-body\", \"p-0\", \"pt-4\"], [3, \"ngSubmit\"], [\"presenceForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"employeeId\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"employeeId\", \"name\", \"employeeId\", \"placeholder\", \"ID de l'employ\\u00E9\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"salary\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"salary\", \"name\", \"hire date\", \"placeholder\", \"Salaire\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"checkInTime\", 1, \"form-label\"], [\"type\", \"time\", \"id\", \"checkInTime\", \"name\", \"checkInTime\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"checkOutTime\", 1, \"form-label\"], [\"type\", \"time\", \"id\", \"checkOutTime\", \"name\", \"checkOutTime\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function PresenceFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"p\", 5);\n          i0.ɵɵtext(6, \"Veuillez remplir les informations ci-dessous pour modifier checkIn et checkOut d'un employee.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n          i0.ɵɵelement(9, \"input\", 8);\n          i0.ɵɵelementStart(10, \"button\", 9);\n          i0.ɵɵelement(11, \"img\", 10);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(12, \"div\", 11)(13, \"div\", 12)(14, \"h6\", 13);\n          i0.ɵɵtext(15, \"D\\u00E9tails de presence \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 14)(17, \"form\", 15, 16);\n          i0.ɵɵlistener(\"ngSubmit\", function PresenceFormComponent_Template_form_ngSubmit_17_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(19, \"div\", 17)(20, \"label\", 18);\n          i0.ɵɵtext(21, \"Employ\\u00E9\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"input\", 19);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_22_listener($event) {\n            return ctx.presence.employeeId = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 17)(24, \"label\", 20);\n          i0.ɵɵtext(25, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"input\", 21);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_26_listener($event) {\n            return ctx.presence.date = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 17)(28, \"label\", 22);\n          i0.ɵɵtext(29, \"Heure d'entr\\u00E9e\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"input\", 23);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_30_listener($event) {\n            return ctx.presence.checkInTime = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 17)(32, \"label\", 24);\n          i0.ɵɵtext(33, \"Heure de sortie\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"input\", 25);\n          i0.ɵɵlistener(\"ngModelChange\", function PresenceFormComponent_Template_input_ngModelChange_34_listener($event) {\n            return ctx.presence.checkOutTime = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"button\", 26);\n          i0.ɵɵtext(36);\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelement(37, \"app-admin-footer\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(22);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.employeeId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.date);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.checkInTime);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.presence.checkOutTime);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Mettre \\u00E0 jour\" : \"Ajouter\", \" \");\n        }\n      },\n      dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.AdminFooterComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["PresenceFormComponent","constructor","presenceService","employeeService","route","router","presence","employeeId","date","checkInTime","checkOutTime","hoursWorked","overtimeHours","isEditMode","id","employees","ngOnInit","getAllEmployees","subscribe","data","snapshot","paramMap","get","getPresenceById","onSubmit","updatePresence","navigate","savePresence","i0","ɵɵdirectiveInject","i1","PresenceService","i2","EmployeeService","i3","ActivatedRoute","Router","selectors","decls","vars","consts","template","PresenceFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","PresenceFormComponent_Template_form_ngSubmit_17_listener","PresenceFormComponent_Template_input_ngModelChange_22_listener","$event","PresenceFormComponent_Template_input_ngModelChange_26_listener","PresenceFormComponent_Template_input_ngModelChange_30_listener","PresenceFormComponent_Template_input_ngModelChange_34_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\Presence\\presence-form\\presence-form.component.ts","C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\Presence\\presence-form\\presence-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\nimport { PresenceService } from 'src/app/core/services/presence.service';\nimport { Presence } from 'src/app/models/presencemodel';\n\n@Component({\n  selector: 'app-presence-form',\n  templateUrl: './presence-form.component.html',\n  styleUrls: ['./presence-form.component.css']\n})\nexport class PresenceFormComponent implements OnInit {\n\n    presence: Presence = {\n      employeeId: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: '',\n      hoursWorked: 0,\n      overtimeHours: 0\n    };\n  \n    isEditMode = false;\n    id: string | null = null;\n  \n    \n  \n    employees: any[] = [];\n\nconstructor(\n  private presenceService: PresenceService,\n  private employeeService: EmployeeService,\n  private route: ActivatedRoute,\n  private router: Router\n) {}\n\nngOnInit(): void {\n  this.employeeService.getAllEmployees().subscribe(data => {\n    this.employees = data;\n  });\n\n  this.id = this.route.snapshot.paramMap.get('id');\n  if (this.id) {\n    this.isEditMode = true;\n    this.presenceService.getPresenceById(this.id).subscribe((data) => {\n      this.presence = {\n        employeeId: data.employeeId,\n        date: data.date,\n        checkInTime: data.checkInTime,\n        checkOutTime: data.checkOutTime,\n        hoursWorked: data.hoursWorked,\n        overtimeHours: data.overtimeHours,\n      };\n    });\n  }\n}\n\n  \n    onSubmit(): void {\n      if (this.isEditMode && this.id) {\n        this.presenceService.updatePresence(this.id, this.presence).subscribe(() => {\n          this.router.navigate(['/admin/presence']);\n\n        });\n      } else {\n        this.presenceService.savePresence(this.presence).subscribe(() => {\n          this.router.navigate(['/admin/attendances']);\n        });\n      }\n    }\n  }\n  \n\n\n","\n\n<!-- Main Wrapper -->\n<main class=\"main-wrapper\">\n  <div class=\"container-fluid\">\n    <div class=\"inner-contents\">\n      <div class=\"page-header d-flex align-items-center justify-content-between mr-bottom-30\">\n        <div class=\"left-part\">\n          <p class=\"text-gray mb-0\">Veuillez remplir les informations ci-dessous pour modifier checkIn et checkOut d'un employee.</p>\n        </div>\n        <div class=\"right-part\">\n          <form class=\"search-form w-auto\" action=\"https://wpthemebooster.com/demo/themeforest/html/kleon/search.php\">\n            <input type=\"text\" name=\"search\" class=\"bg-white form-control\" placeholder=\"Search\">\n            <button type=\"submit\" class=\"btn\"><img src=\"assets/img/svg/search.svg\" alt=\"\"></button>\n          </form>\n        </div>\n      </div>\n\n      <!-- Formulaire d'ajout -->\n      <div class=\"card border-0 p-5\">\n        <div class=\"card-header bg-transparent border-0 p-0 d-flex align-items-center justify-content-between gap-3\">\n          <h6 class=\"mb-0\">Détails de presence </h6>\n        </div>\n\n        <div class=\"card-body p-0 pt-4\">\n          <form (ngSubmit)=\"onSubmit()\" #presenceForm=\"ngForm\">\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"employeeId\">Employé</label>\n              <input type=\"text\" class=\"form-control\" id=\"employeeId\" [(ngModel)]=\"presence.employeeId\" name=\"employeeId\" placeholder=\"ID de l'employé\" required />\n            </div>\n\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"salary\">Date</label>\n              <input type=\"date\" class=\"form-control\" id=\"salary\" [(ngModel)]=\"presence.date\" name=\"hire date\" placeholder=\"Salaire\" required />\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"checkInTime\">Heure d'entrée</label>\n                <input type=\"time\" class=\"form-control\" id=\"checkInTime\" [(ngModel)]=\"presence.checkInTime\" name=\"checkInTime\" />\n              </div>\n              \n              <div class=\"form-group\">\n                <label class=\"form-label\" for=\"checkOutTime\">Heure de sortie</label>\n                <input type=\"time\" class=\"form-control\" id=\"checkOutTime\" [(ngModel)]=\"presence.checkOutTime\" name=\"checkOutTime\" />\n              </div>\n              \n\n              <button type=\"submit\" class=\"btn btn-primary\">\n                {{ isEditMode ? 'Mettre à jour' : 'Ajouter' }}\n              </button>\n          </form>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</main>\n\n<app-admin-footer></app-admin-footer>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}