{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RequestadminComponent = class RequestadminComponent {\n  constructor(requestService, employeeService) {\n    this.requestService = requestService;\n    this.requests = [];\n    this.employees = [];\n  }\n  ngOnInit() {\n    this.requestService.getAllRequests().subscribe(requests => {\n      this.requests = requests;\n    });\n    this.employeeService.getAllEmployees().subscribe(employees => {\n      this.employees = employees;\n      this.mapEmployeesToRequests();\n    });\n  }\n  mapEmployeesToRequests() {\n    this.requests = this.requests.map(request => {\n      const employee = this.employees.find(emp => emp.id === request.employeeId);\n      return {\n        ...request,\n        employee\n      };\n    });\n  }\n  /*updateStatus(id: string, status: string) {\n    this.requestService.updateStatus(id, status).subscribe(() => {\n      this.ngOnInit(); // refresh\n    });\n  }*/\n  updateStatus(req, newStatus) {\n    const updatedRequest = {\n      ...req,\n      status: newStatus\n    };\n    this.requestService.updateStatus(updatedRequest).subscribe({\n      next: res => {\n        req.status = newStatus; // mise à jour locale\n      },\n\n      error: err => {\n        console.error('Erreur lors de la mise à jour :', err);\n      }\n    });\n  }\n  getAllRequests() {\n    this.requestService.getAllRequests().subscribe(data => {\n      this.requests = data;\n    });\n  }\n};\nRequestadminComponent = __decorate([Component({\n  selector: 'app-requestadmin',\n  templateUrl: './requestadmin.component.html',\n  styleUrls: ['./requestadmin.component.css']\n})], RequestadminComponent);","map":{"version":3,"names":["Component","RequestadminComponent","constructor","requestService","employeeService","requests","employees","ngOnInit","getAllRequests","subscribe","getAllEmployees","mapEmployeesToRequests","map","request","employee","find","emp","id","employeeId","updateStatus","req","newStatus","updatedRequest","status","next","res","error","err","console","data","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\USER\\Desktop\\OumaimaPI\\projetttttttt\\projetttttttt\\src\\app\\features\\components\\request\\requestadmin\\requestadmin.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RequestService } from 'src/app/core/services/request.service';\nimport { Employee, Request } from 'src/app/models/presencemodel';\n\n@Component({\n  selector: 'app-requestadmin',\n  templateUrl: './requestadmin.component.html',\n  styleUrls: ['./requestadmin.component.css']\n})\nexport class RequestadminComponent {\n\n  requests: Request[] = [];\n  employees: Employee[] = [];\n\n\n  constructor(private requestService: RequestService, employeeService: EmployeeService) {}\n\nngOnInit() {\n  this.requestService.getAllRequests().subscribe((requests) => {\n    this.requests = requests;\n  });\n\n  this.employeeService.getAllEmployees().subscribe((employees) => {\n    this.employees = employees;\n    this.mapEmployeesToRequests();\n  });\n}\n\nmapEmployeesToRequests() {\n  this.requests = this.requests.map(request => {\n    const employee = this.employees.find(emp => emp.id === request.employeeId);\n    return { ...request, employee };\n  });\n}\n\n\n  /*updateStatus(id: string, status: string) {\n    this.requestService.updateStatus(id, status).subscribe(() => {\n      this.ngOnInit(); // refresh\n    });\n  }*/\n\n  updateStatus(req: Request, newStatus: 'APPROVED' | 'REJECTED') {\n    const updatedRequest = { ...req, status: newStatus };\n  \n    this.requestService.updateStatus(updatedRequest).subscribe({\n      next: (res) => {\n        req.status = newStatus; // mise à jour locale\n      },\n      error: (err) => {\n        console.error('Erreur lors de la mise à jour :', err);\n      }\n    });\n  }\n  \n\n\n  getAllRequests() {\n    this.requestService.getAllRequests().subscribe((data: Request[]) => {\n      this.requests = data;\n    });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMhCC,YAAoBC,cAA8B,EAAEC,eAAgC;IAAhE,KAAAD,cAAc,GAAdA,cAAc;IAJlC,KAAAE,QAAQ,GAAc,EAAE;IACxB,KAAAC,SAAS,GAAe,EAAE;EAG6D;EAEzFC,QAAQA,CAAA;IACN,IAAI,CAACJ,cAAc,CAACK,cAAc,EAAE,CAACC,SAAS,CAAEJ,QAAQ,IAAI;MAC1D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACD,eAAe,CAACM,eAAe,EAAE,CAACD,SAAS,CAAEH,SAAS,IAAI;MAC7D,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACK,sBAAsB,EAAE;IAC/B,CAAC,CAAC;EACJ;EAEAA,sBAAsBA,CAAA;IACpB,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACO,GAAG,CAACC,OAAO,IAAG;MAC1C,MAAMC,QAAQ,GAAG,IAAI,CAACR,SAAS,CAACS,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,OAAO,CAACK,UAAU,CAAC;MAC1E,OAAO;QAAE,GAAGL,OAAO;QAAEC;MAAQ,CAAE;IACjC,CAAC,CAAC;EACJ;EAGE;;;;;EAMAK,YAAYA,CAACC,GAAY,EAAEC,SAAkC;IAC3D,MAAMC,cAAc,GAAG;MAAE,GAAGF,GAAG;MAAEG,MAAM,EAAEF;IAAS,CAAE;IAEpD,IAAI,CAAClB,cAAc,CAACgB,YAAY,CAACG,cAAc,CAAC,CAACb,SAAS,CAAC;MACzDe,IAAI,EAAGC,GAAG,IAAI;QACZL,GAAG,CAACG,MAAM,GAAGF,SAAS,CAAC,CAAC;MAC1B,CAAC;;MACDK,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAEC,GAAG,CAAC;MACvD;KACD,CAAC;EACJ;EAIAnB,cAAcA,CAAA;IACZ,IAAI,CAACL,cAAc,CAACK,cAAc,EAAE,CAACC,SAAS,CAAEoB,IAAe,IAAI;MACjE,IAAI,CAACxB,QAAQ,GAAGwB,IAAI;IACtB,CAAC,CAAC;EACJ;CAED;AAtDY5B,qBAAqB,GAAA6B,UAAA,EALjC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhC,qBAAqB,CAsDjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}